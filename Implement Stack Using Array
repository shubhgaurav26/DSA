Problem Statement
Write a program to implement a Stack using Array. Your task is to use the class as shown in the code editor and complete the functions push() and pop() to implement a stack. 

 

You are required to complete two methods push() and pop(). The push() method takes one argument, an integer 'x' to be pushed into the stack and pop() which returns an integer present at the top and popped out from the stack. If the stack is empty then return -1 from the pop() method.

 

Example 1:
Input:

5
push(2)
push(3)
pop()
push(4) 
pop()


Output:

[2]


Explanation: 
push(2):    the stack will be {2}
push(3):    the stack will be {2 3}
pop():      poped element will be 3, the stack will be {2}
push(4):    the stack will be {2 4}
pop():      poped element will be 4

Final Stack: [2]

Example 2:
Input:

4
pop()
push(4)
push(5)
pop()

Output:

4

Constraints:
1 <= Number of Queries <= 100
1 <= x <= 100




CODE :


class StackUsingArray {
    private int[] stack;
    private int top;
    private int capacity;

    public StackUsingArray(int capacity) {
        this.capacity = capacity;
        this.stack = new int[capacity];
        this.top = -1;
    }

    public void push(int x) {
        if (top < capacity - 1) {
            stack[++top] = x;
        }
    }

    public int pop() {
        if (top == -1) {
            return -1;
        }
        return stack[top--];
    }

    public static void main(String[] args) {
        StackUsingArray stack = new StackUsingArray(100);
        stack.push(2);
        stack.push(3);
        System.out.println(stack.pop());
        stack.push(4);
        System.out.println(stack.pop());
    }
}


