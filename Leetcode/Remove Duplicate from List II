Problem Statement
Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.

Example 1:
Input:

head = [-1, 1, 2, 3, 3, 3]

Output:

[-1, 1, 2]

Example 2:
Input:

head = [-1, 1, 2, 2]

Output:

[-1, 1]

Constraints:
-300 <= node value <= 300

Each list has atmost 100 nodes.


CODE : 

class ListNode {
    int value;
    ListNode next;
    ListNode(int value) {
        this.value = value;
        this.next = null;
    }
}

public class RemoveDuplicates {
    public static ListNode deleteDuplicates(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;

        while (head != null) {
            if (head.next != null && head.value == head.next.value) {
                while (head.next != null && head.value == head.next.value) {
                    head = head.next;
                }
                prev.next = head.next;
            } else {
                prev = prev.next;
            }
            head = head.next;
        }
        return dummy.next;
    }

    public static ListNode createLinkedList(int[] values) {
        if (values.length == 0) return null;
        ListNode head = new ListNode(values[0]);
        ListNode current = head;
        for (int i = 1; i < values.length; i++) {
            current.next = new ListNode(values[i]);
            current = current.next;
        }
        return head;
    }

    public static void printLinkedList(ListNode head) {
        while (head != null) {
            System.out.print(head.value);
            if (head.next != null) System.out.print(" -> ");
            head = head.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        ListNode head = createLinkedList(new int[]{-1, 1, 2, 3, 3, 3});
        printLinkedList(head);
        head = deleteDuplicates(head);
        printLinkedList(head);

        head = createLinkedList(new int[]{-1, 1, 2, 2});
        printLinkedList(head);
        head = deleteDuplicates(head);
        printLinkedList(head);
    }
}

