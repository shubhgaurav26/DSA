Problem Statement
Given a Linked List A consisting of N nodes.

The Linked List is binary i.e data values in the linked list nodes consist of only 0's and 1's.

You need to sort the linked list and return the new linked list.

NOTE: Try to do it in constant space.

Example 1:
Input:

1 -> 0 -> 0 -> 1 -> 1
Output:

0 -> 0 -> 1 -> 1 -> 1
Example 2:
Input:

1 -> 0
Output:

0 -> 1
Constraints:
1 <= N <= 105

A.val = 0 or A.val = 1


CODE:


class ListNode {
    int val;
    ListNode next;
    ListNode(int val) {
        this.val = val;
        this.next = null;
    }
}

public class Solution {
    public ListNode solve(ListNode A) {
        int countZero = 0;
        int countOne = 0;

        ListNode temp = A;
        while (temp != null) {
            if (temp.val == 0) countZero++;
            else countOne++;
            temp = temp.next;
        }

        temp = A;
        while (temp != null) {
            if (countZero > 0) {
                temp.val = 0;
                countZero--;
            } else {
                temp.val = 1;
            }
            temp = temp.next;
        }

        return A;
    }
}





