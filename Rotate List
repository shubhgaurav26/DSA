Problem Statement
Rotate a given list k places to the right, where k is not a negative number.

Example 1:
Input:
A = 1->2->3->4->5->NULL
B = 2

Output:
4->5->1->2->3->NULL

Example 2:
Input:
A = 1->2->3->4->5->NULL
B = 5

Output:
1->2->3->4->5->NULL

Constraints:
1 <= Length of List <= 109

1 <= B <= 109



CODE :


class ListNode {
    int val;
    ListNode next;

    ListNode(int val) {
        this.val = val;
    }
}

public class Solution {
    public ListNode rotateRight(ListNode head, int B) {
        if (head == null || head.next == null || B == 0) return head;

        ListNode current = head;
        int length = 1;

        while (current.next != null) {
            current = current.next;
            length++;
        }

        current.next = head;
        B = B % length;
        int skip = length - B;

        while (skip-- > 0) current = current.next;

        head = current.next;
        current.next = null;

        return head;
    }

    public static void main(String[] args) {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        Solution solution = new Solution();
        ListNode result = solution.rotateRight(head, 2);

        while (result != null) {
            System.out.print(result.val + " -> ");
            result = result.next;
        }
        System.out.println("null");
    }
}
