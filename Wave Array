Problem Statement
Given an array of integers A, sort the array into a wave-like array and return it. Arrange the elements into a sequence such that -

a1 >= a2 <= a3 >= a4 <= a5.....

NOTE: If multiple answers are possible, return the lexicographically smallest one.

Example 1:
Input:

A = [1, 2, 3, 4]

Output:

[2, 1, 4, 3]

Example 2:
Input: 
A[] = [2, 4, 7, 8, 9, 10]
Output: 
[4, 2, 8, 7, 10, 9]
Constraints:
1 <= | A | <= 106

1 <= Ai <= 106

CODE :

import java.util.*;

public class WaveSort {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) A[i] = sc.nextInt();

        int[] result = waveSort(A);
        for (int val : result) System.out.print(val + " ");
    }

    public static int[] waveSort(int[] A) {
        Arrays.sort(A);
        for (int i = 0; i < A.length - 1; i += 2) {
            int temp = A[i];
            A[i] = A[i + 1];
            A[i + 1] = temp;
        }
        return A;
    }
}

